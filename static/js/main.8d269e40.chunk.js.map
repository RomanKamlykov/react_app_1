{"version":3,"sources":["components/Header.js","components/Slider/CarouselIndicator.js","components/Slider/CarouselItem.js","components/Slider.js","components/NavBar/NavItem.js","components/NavBar/NavBar.js","components/ItemsSlider/Item.js","components/ItemsSlider/ItemsSlider.js","components/Bestsellers.js","components/Updates.js","components/Seo.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","id","className","src","alt","CarouselIndicator","props","data-target","data-slide-to","index","height","width","cx","cy","r","CarouselItem","item","img","type","Slider","data-ride","carousel","map","Slider_CarouselIndicator","key","Slider_CarouselItem","NavItem","category","data-toggle","href","role","aria-controls","aria-selected","onClick","filter","name","NavBar","categories","NavBar_NavItem","Item","price","priceOld","interest","info","ItemsSlider","state","firstItem","prev","newFirstItem","_this","itemsCount","setState","next","items","length","componentWillReceiveProps","_this2","this","slice","ItemsSlider_Item","style","display","React","Component","Bestsellers","activeCategory","firstCategory","categoryCount","setActiveCategory","filterByActiveCategory","el","window","innerWidth","components_NavBar_NavBar","components_ItemsSlider_ItemsSlider","bestsellersCount","Updates","updatesCount","allUpdates","Seo","Footer","placeholder","autoComplete","App","bestsellers","updates","document","querySelector","Infinity","getCount","componentWillMount","getElementsByTagName","onresize","src_components_Header","src_components_Slider","src_components_Bestsellers","src_components_Updates","src_components_Seo","src_components_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8d269e40.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.scss';\r\n\r\nconst Header = () => (\r\n    <div id=\"header\">\r\n        <div className=\"introduction\">\r\n            <p>Handmade jewelry of the Viking Age and the ancient Slavs</p>\r\n        </div>\r\n\r\n        <div className=\"icons\">\r\n            <img src=\"img/00_header/shopping_cart.png\" alt=\"\" className=\"shopping_cart\" />\r\n            <img src=\"img/00_header/door_in.png\" alt=\"\" className=\"door_in\" />    \r\n        </div>\r\n\r\n        <div className=\"nav\">\r\n            <div className=\"burger\"></div>\r\n            <ul className=\"list-unstyled\">\r\n                <li>CATALOG</li>\r\n                <li>UPDATES</li>\r\n                <li>REVIEWS</li>\r\n                <li>ABOUT</li>\r\n                <li>CONTACTS</li>\r\n                <li>POLICIES</li>\r\n            </ul>    \r\n\r\n            <img src=\"img/00_header/logo.png\" alt=\"\" className=\"logo\" />    \r\n            <div className=\"ellipse\"></div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst CarouselIndicator = (props) => (\r\n    <li data-target=\"#carouselExampleIndicators\" data-slide-to={props.index} className={props.index === 0 ? 'active' : ''} >\r\n        <svg height=\"20\" width=\"20\">\r\n            <circle cx=\"10\" cy=\"10\" r=\"6\" />\r\n        </svg>\r\n    </li>\r\n)\r\n\r\nexport default CarouselIndicator;","import React from 'react';\r\n\r\nconst CarouselItem = (props) => (\r\n    <div className={props.index === 0 ? 'carousel-item active' : 'carousel-item'}>\r\n        <img className=\"d-block w-100\" src={props.item.img} alt={props.index+1 + \"slide\"} />\r\n\r\n        <div>\r\n            <p>WELCOME <br/>TO BERLOGA WORKSHOP</p>\r\n            <button type=\"button\" className=\"btn btn-success\">DISCOVER</button>    \r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default CarouselItem;","import React from 'react';\r\nimport CarouselIndicator from './Slider/CarouselIndicator';\r\nimport CarouselItem from './Slider/CarouselItem';\r\nimport './Slider.scss';\r\n\r\nconst Slider = (props) => (\r\n    <div id=\"slider\">\r\n        <div id=\"carouselExampleIndicators\" className=\"carousel slide\" data-ride=\"carousel\">\r\n            <ol className=\"carousel-indicators\">\r\n                {props.carousel.map((item, index) => {\r\n                    return (\r\n                        <CarouselIndicator index={index} key={index} />\r\n                    )                                     \r\n                })}            \r\n            </ol>\r\n\r\n            <div className=\"carousel-inner\">\r\n                {props.carousel.map((item, index) => {\r\n                    return (\r\n                        <CarouselItem item={item} index={index} key={index} />\r\n                    )                                  \r\n                })}            \r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Slider;","import React from 'react';\r\n\r\n// при загрузке первому элементу 'NavItem' с параметром 'props.index === 0' устанавливается класс 'nav-link active'\r\nconst NavItem = (props) => (\r\n    <li className=\"nav-item\">\r\n        <a className={props.index === 0 ? 'nav-link active' : 'nav-link'} \r\n            id={props.category.className + \"-tab\"} \r\n            data-toggle=\"tab\" \r\n            href={props.category.className} \r\n            role=\"tab\" \r\n            aria-controls={props.category.className} \r\n            aria-selected=\"true\"\r\n            onClick={props.filter}>{props.category.name}\r\n        </a>\r\n    </li>\r\n)\r\n\r\nexport default NavItem;","import React from 'react';\r\nimport NavItem from './NavItem';\r\n\r\nconst NavBar = (props) => (\r\n    <div className=\"navbar\">\r\n        <ul className=\"nav\" id=\"myTab\" role=\"tablist\">\r\n            {props.categories\r\n            .map((category, index) => {\r\n                return(\r\n                    <NavItem \r\n                        category={category} \r\n                        filter={() => props.filter(category.className)} \r\n                        index={index} \r\n                        key={index} />\r\n                )                \r\n            })}                                       \r\n        </ul>\r\n                \r\n        <div className=\"more\">\r\n            <span>More</span>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nconst Item = (props) => (\r\n    <div className=\"item\">\r\n        <div className=\"img\">\r\n            <img src={props.item.img} alt=\"\" className=\"\" />\r\n        </div>\r\n\r\n        <div className=\"text\">\r\n            <div className=\"name\">{props.item.name}</div>\r\n            <div>\r\n                <span className=\"price\">{props.item.price}</span>\r\n\r\n                <span className=\"stock\">\r\n                    <span className=\"price_old\">{props.item.priceOld}</span>\r\n                    <span> </span>\r\n                    <span className=\"interest\">{props.item.interest}</span>\r\n                </span>                                \r\n            </div>\r\n            <div className=\"info\">{props.item.info}</div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Item;","import React from 'react';\r\nimport Item from './Item';\r\nimport './ItemsSlider.scss';\r\n\r\n// компонент ItemsSlider отображает карточки товаров - 'Item', и переключатели - 'стрелочки' влево и вправо\r\n// принимает параметры\r\n// props.items - массив карточек товаров для отображения\r\n// props.itemsCount - кол-во карточек товаров для отображения\r\n\r\nclass ItemsSlider extends React.Component {\r\n    state = {\r\n        firstItem: 0\r\n    }\r\n\r\n    // методы 'prev' и 'next' используются для 'перелистывания' отображаемых карточек товаров\r\n    // используются параметры: 'firstItem' - первый элемент для отображения, 'itemsCount' - кол-во элементов для отображения\r\n    prev = () => {\r\n        const newFirstItem = this.state.firstItem - this.props.itemsCount;\r\n        if (newFirstItem >= 0) {\r\n            this.setState({ firstItem: newFirstItem });\r\n        } else if (newFirstItem < 0) {\r\n            this.setState({ firstItem: 0 });\r\n        }\r\n    }    \r\n    next = () => {\r\n        const newFirstItem = this.state.firstItem + this.props.itemsCount;\r\n        if (newFirstItem < this.props.items.length) {\r\n            this.setState({ firstItem: newFirstItem });\r\n        }\r\n    }\r\n\r\n    // при наступлении события 'componentWillReceiveProps' значение параметра 'firstItem' сбрасывается до нуля\r\n    componentWillReceiveProps = () => {\r\n        this.setState({ firstItem: 0 });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"slider\">\r\n                <div className=\"items\">\r\n                    {this.props.items\r\n                    .slice(this.state.firstItem, this.state.firstItem+this.props.itemsCount)\r\n                    .map((item, index) => {\r\n                        return (\r\n                            <Item item={item} key={index} />\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n                <div className=\"arrows\" style={(this.props.items.length < this.props.itemsCount) ? {display: \"none\"}:{display: \"block\"}}>\r\n                    <div className=\"prev\" onClick={() => this.prev()} style={(this.state.firstItem <= 0) ? {display: \"none\"}:{display: \"block\"}}></div>\r\n                    <div className=\"next\" onClick={() => this.next()} style={(this.state.firstItem+this.props.itemsCount >= this.props.items.length) ? {display: \"none\"}:{display: \"block\"}}></div>\r\n                </div>                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemsSlider;","import React from 'react';\r\nimport NavBar from './NavBar/NavBar';\r\nimport ItemsSlider from './ItemsSlider/ItemsSlider';\r\nimport './Bestsellers.scss';\r\n\r\nclass Bestsellers extends React.Component {\r\n\r\n    // параметр 'activeCategory' - для фильтрации карточек товаров по категориям\r\n    // параметры 'firstCategory' и 'categoryCount' - для \"перелистывания\" категорий в \"мобильной\" версии сайта\r\n    state = {\r\n        activeCategory: \"all\",\r\n        firstCategory: 0,\r\n        categoryCount: 3\r\n    }\r\n\r\n    // методы для \"перелистывания\" категорий в \"мобильной\" версии сайта\r\n    prev = () => {\r\n        const newFirstItem = this.state.firstCategory - this.state.categoryCount;\r\n        if (newFirstItem >= 0) {\r\n            this.setState({ firstCategory: newFirstItem });\r\n        } else if (newFirstItem < 0) {\r\n            this.setState({ firstCategory: 0 });\r\n        }\r\n    }    \r\n    next = () => {\r\n        const newFirstItem = this.state.firstCategory + this.state.categoryCount;\r\n        if (newFirstItem < this.props.categories.length) {\r\n            this.setState({ firstCategory: newFirstItem });            \r\n        }\r\n    }\r\n\r\n    // методы для установки и фильтрации карточек товаров по категориям\r\n    setActiveCategory = (category) => {\r\n        this.setState({ activeCategory: category });       \r\n    }\r\n    filterByActiveCategory = (el) => {\r\n        if (this.state.activeCategory === \"all\") {\r\n            return true;\r\n        } else {\r\n            return el.category === this.state.activeCategory;\r\n        }        \r\n    }\r\n\r\n    // метод 'render' этого компонента возвращает различное содержимое в зависимости от размера окна браузера\r\n    // в \"пк\" и в \"планшетной\" версии компнонент отображает три части\r\n    // -заголовок с className=\"topic\"\r\n    // -панель навигации 'NavBar', в которую передаем массив 'categories' и функцию фильтрации 'filter', которая позволяет изменять массив 'props.items'\r\n    // -слайдер карточек товаров 'ItemsSlider', в который передаем фильтрованый массив 'props.items' и параметр 'props.itemsCount' - кол-во карточек товаров для отображения\r\n\r\n    // в \"мобильной\" версии компнонент отображает три части\r\n    // -заголовок с className=\"topic\"\r\n    // -слайдер категорий товаров, который отображает по три слайдера карточек товаров 'ItemsSlider'\r\n    // -стрелки навигации с className=\"nextCategory\" для \"перелистывания\" категорий\r\n    render() {\r\n        if (window.innerWidth >= 576) {\r\n            return (\r\n                <div id=\"bestsellers\">\r\n                    <div className=\"desktop\">\r\n\r\n                        <div className=\"topic\">\r\n                            <img src=\"img/icon.png\" alt=\"\" />\r\n                            <span className=\"BESTSELLERS\"> BESTSELLERS</span>\r\n\r\n                            <div className=\"search\">\r\n                            </div>\r\n                        </div>\r\n            \r\n                        <NavBar \r\n                            categories={this.props.categories} \r\n                            filter={this.setActiveCategory} />\r\n\r\n                        <ItemsSlider items={this.props.items.filter(this.filterByActiveCategory)} itemsCount={this.props.bestsellersCount} />\r\n\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else if (window.innerWidth < 576) {\r\n            return (\r\n                <div id=\"bestsellers\">\r\n                    <div className=\"mobile\">\r\n\r\n                        <div className=\"topic\">\r\n                            <img src=\"img/02_bestsellers/icon.png\" alt=\"\" />\r\n                            <span className=\"BESTSELLERS\"> BESTSELLERS</span>\r\n\r\n                            <div className=\"search\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        {this.props.categories\r\n                        .slice(1)\r\n                        .slice(this.state.firstCategory, this.state.firstCategory+this.state.categoryCount)\r\n                        .map((category, index) => {\r\n                            // в цикле фильтуем и выводим массив 'props.items' по категории 'category.className'\r\n                            let items = this.props.items.filter(el => el.category === category.className);\r\n                            return (\r\n                                <div key={index}>\r\n                                    <p>{category.name}</p>\r\n                                    <ItemsSlider items={items} itemsCount={this.props.bestsellersCount} />                                                         \r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                        <div className=\"nextCategory\">\r\n                            <div className=\"prev\" \r\n                                onClick={() => this.prev()} \r\n                                style={(this.state.firstCategory <= 0) ? {display: \"none\"}:{display: \"block\"}}></div>\r\n                            <span>Next</span>\r\n                            <div className=\"next\" \r\n                                onClick={() => this.next()} \r\n                                style={(this.state.firstCategory+this.state.categoryCount >= this.props.categories.length-1) ? {display: \"none\"}:{display: \"block\"}}></div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            );\r\n        }            \r\n    }\r\n}\r\n\r\nexport default Bestsellers;","import React from 'react';\r\nimport ItemsSlider from './ItemsSlider/ItemsSlider';\r\nimport './Updates.scss';\r\n\r\n// компонент состоит из трех \"частей\"\r\n// заголовок с className=\"topic\"\r\n// слайдер карточек товаров 'ItemsSlider'\r\n// кнопка отображения всех карточек товаров с className=\"allUpdates\" в категории 'Updates'\r\n\r\n// слайдеру карточек товаров 'ItemsSlider' передается массив 'props.items' и параметр 'props.itemsCount' - кол-во карточек товаров для отображения\r\n\r\nconst Updates = (props) => (\r\n    <div id=\"updates\">\r\n        <div className=\"topic\">\r\n            <img src=\"img/icon.png\" alt=\"\" className=\"icon\" />\r\n            <span className=\"Fresh_updates\"> Fresh updates</span>\r\n        </div>\r\n\r\n        <ItemsSlider items={props.items} itemsCount={props.updatesCount} />\r\n\r\n        <div className=\"allUpdates\">\r\n            <button type=\"button\" className=\"btn btn-success\" onClick={() => props.allUpdates(\"#updates\")}>ALL UPDATES</button>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Updates;","import React from 'react';\r\nimport './Seo.scss';\r\n\r\nconst Seo = () => (\r\n    <div id=\"seo\">\r\n        <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Maxime iste est ea neque unde possimus sint? Dolor ducimus magni, quos sequi aut eveniet nemo illo eum. Ratione quibusdam obcaecati rerum.\r\n            Praesentium laborum expedita corporis iste voluptates sapiente placeat, facilis beatae, non nisi similique obcaecati ipsum possimus vel, veniam ex. Possimus expedita veritatis est id molestias rerum aliquam beatae qui error.\r\n            Perferendis reprehenderit beatae ex expedita! Itaque necessitatibus reprehenderit laudantium vel suscipit nam similique perferendis ipsam, ex omnis voluptates inventore cumque vitae molestiae, illum tempore non iusto deserunt beatae nihil. Fugiat?\r\n        </p>\r\n    </div>\r\n)\r\n\r\nexport default Seo;","import React from 'react';\r\nimport './Footer.scss';\r\n\r\nconst Footer = () => (\r\n    <div id=\"footer\">\r\n        <div>\r\n            <div className=\"customer\">\r\n                <h4>CUSTOMER SERVISE</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <li>Home</li>\r\n                    <li>Catalog</li>\r\n                    <li>Updates</li>\r\n                    <li>Reviews</li>\r\n                    <li>About</li>\r\n                    <li>Contacts</li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"items\">\r\n                <h4>ITEMS</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <li>Rings</li>\r\n                    <li>Thor’s hammer</li>\r\n                    <li>Axes</li>\r\n                    <li>Pendants</li>\r\n                    <li>Chais and bracelets</li>\r\n                    <li>Gold</li>\r\n                </ul>\r\n            </div>\r\n            \r\n            <div className=\"contacts\">\r\n                <h4>CONTACT</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <li><input type=\"text\" name=\"name\" id=\"\" placeholder=\"Your name\" autoComplete=\"off\" /></li>\r\n                    <li><input type=\"text\" name=\"email\" id=\"\" placeholder=\"Your e-mail\" autoComplete=\"off\" /></li>\r\n                    <li><input type=\"text\" name=\"message\" id=\"\" placeholder=\"Message\" autoComplete=\"off\" /></li>\r\n                </ul>    \r\n                <br />        \r\n                <button type=\"button\" className=\"btn btn-dark\">SEND</button>\r\n            </div>\r\n        </div>\r\n        <img src=\"img/05_footer/logo.png\" alt=\"\" className=\"logo\" />\r\n    </div>\r\n)\r\n\r\nexport default Footer;","import React from 'react';\n\nimport Header from './components/Header';\nimport Slider from './components/Slider';\nimport Bestsellers from './components/Bestsellers';\nimport Updates from './components/Updates';\nimport Seo from './components/Seo';\nimport Footer from './components/Footer';\n\nimport carousel from './data/carousel.json';\nimport bestsellers from './data/bestsellers.json';\nimport categories from './data/categories.json';\nimport updates from './data/updates.json';\n\nclass App extends React.Component {\n  state = {\n    carousel: carousel,\n    bestsellers: bestsellers,\n    categories: categories,\n    updates: updates,\n    \n    bestsellersCount: 0,\n    updatesCount: 0\n  }\n\n  // метод 'allUpdates' используем для отображения всех карточек товаров в категории 'updates',также он скрывает кнопку 'ALL UPDATES'\n  allUpdates = (className) => {\n    document.querySelector(className + \" .slider\").style.height = \"auto\";\n    document.querySelector(className + \" .allUpdates\").style.display = \"none\";\n    this.setState({ updatesCount: Infinity });\n  }\n\n  // метод для получения кол-ва карточек товаров для отображения в зависимости от размера экрана браузера\n  // условие 'updatesCount !== Infinity' добавлено для того, чтобы после нажатия кнопки 'ALL UPDATES' компонент 'Updates' не изменялся при изменении размера окна браузера\n  getCount = () => {\n    if (window.innerWidth >= 992) {\n      this.setState({ bestsellersCount: 8 });\n\n      if (this.state.updatesCount !== Infinity) {\n        this.setState({ updatesCount: 4 });\n      }      \n    }\n    if ((window.innerWidth >= 576)&&(window.innerWidth < 992)) {\n      this.setState({ bestsellersCount: 9 });\n\n      if (this.state.updatesCount !== Infinity) {\n        this.setState({ updatesCount: 3 });\n      }\n    }\n    if (window.innerWidth < 576) {\n      this.setState({ bestsellersCount: 1 });\n\n      if (this.state.updatesCount !== Infinity) {\n        this.setState({ updatesCount: 1 });\n      }\n    }\n  }\n\n  // при загрузке компонента вызываем расчет кол-ва карточек товаров для отображения и передаем эту функцию событию брузера 'onresize' для отслеживания изменения браузера\n  componentWillMount = () => {\n      this.getCount();\n      document.getElementsByTagName(\"body\")[0].onresize = () => {this.getCount()};\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Slider \n          carousel={this.state.carousel} />\n        <Bestsellers            \n          items={this.state.bestsellers} \n          bestsellersCount={this.state.bestsellersCount}\n          categories={this.state.categories} />\n        <Updates \n          items={this.state.updates} \n          updatesCount={this.state.updatesCount} \n          allUpdates={this.allUpdates} />\n        <Seo />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//Include bootstrap's css \nimport './../node_modules/bootstrap/dist/css/bootstrap.min.css';\n//Include bootstrap's js\nimport './../node_modules/bootstrap/dist/js/bootstrap.min.js';\n\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}